

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 16 16:31:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F886 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0007                     _PORTCbits	set	7
   204  0018                     _RCSTAbits	set	24
   205  0012                     _T2CONbits	set	18
   206  0006                     _PORTBbits	set	6
   207  001E                     _ADRESH	set	30
   208  000C                     _PIR1bits	set	12
   209  000B                     _INTCONbits	set	11
   210  0099                     _SPBRG	set	153
   211  0098                     _TXSTAbits	set	152
   212  0092                     _PR2	set	146
   213  0085                     _TRISAbits	set	133
   214  0086                     _TRISBbits	set	134
   215  008F                     _OSCCONbits	set	143
   216  008F                     _OSCCON	set	143
   217  009E                     _ADRESL	set	158
   218  008C                     _PIE1bits	set	140
   219  0187                     _BAUDCTLbits	set	391
   220  0188                     _ANSELbits	set	392
   221  0189                     _ANSELH	set	393
   222                           
   223                           ; #config settings
   224  0000                     
   225                           	psect	cinit
   226  0015                     start_initialization:	
   227  0015                     __initialization:	
   228                           
   229                           ; Clear objects allocated to COMMON
   230  0015  01FA               	clrf	__pbssCOMMON& (0+127)
   231  0016  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   232  0017  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   233  0018  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   234  0019                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  0019                     __end_of__initialization:	
   238  0019  0183               	clrf	3
   239  001A  120A  118A  2896   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMMON
   242  007A                     __pbssCOMMON:	
   243  007A                     _adcValue:	
   244  007A                     	ds	2
   245  007C                     _led0cont:	
   246  007C                     	ds	2
   247                           
   248                           	psect	cstackCOMMON
   249  0070                     __pcstackCOMMON:	
   250  0070                     ?_Init_Oscillator:	
   251  0070                     ?_Init_InOutPorts:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_Init_TMR2:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_Init_UART1:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_ISR_my:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??_ISR_my:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_main:	
   267                           ; 1 bytes @ 0x0
   268                           
   269                           
   270                           ; 2 bytes @ 0x0
   271  0070                     	ds	6
   272  0076                     ISR_my@adcValueL:	
   273                           
   274                           ; 2 bytes @ 0x6
   275  0076                     	ds	2
   276  0078                     ISR_my@adcValueH:	
   277                           
   278                           ; 2 bytes @ 0x8
   279  0078                     	ds	2
   280                           
   281                           	psect	cstackBANK0
   282  0000                     __pcstackBANK0:	
   283  0000                     ??_Init_Oscillator:	
   284  0000                     ??_Init_InOutPorts:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0000                     ??_Init_TMR2:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0000                     ??_Init_UART1:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0000                     ??_main:	
   294                           ; 1 bytes @ 0x0
   295                           
   296                           
   297                           	psect	maintext
   298  0096                     __pmaintext:	
   299                           ; 1 bytes @ 0x0
   300 ;;
   301 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   302 ;;
   303 ;; *************** function _main *****************
   304 ;; Defined at:
   305 ;;		line 35 in file "src/main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  2   26[None  ] int 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0, pclath, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : B00/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   319 ;;      Params:         0       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0
   321 ;;      Temps:          0       0       0       0       0
   322 ;;      Totals:         0       0       0       0       0
   323 ;;Total ram usage:        0 bytes
   324 ;; Hardware stack levels required when called:    2
   325 ;; This function calls:
   326 ;;		_Init_InOutPorts
   327 ;;		_Init_Oscillator
   328 ;;		_Init_TMR2
   329 ;;		_Init_UART1
   330 ;; This function is called by:
   331 ;;		Startup code after reset
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           
   336                           ;psect for function _main
   337  0096                     _main:	
   338                           
   339                           ;main.c: 37: Init_Oscillator();
   340                           
   341                           ;incstack = 0
   342                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   343  0096  120A  118A  20D1  120A  118A  	fcall	_Init_Oscillator
   344                           
   345                           ;main.c: 38: Init_InOutPorts();
   346  009B  120A  118A  20C1  120A  118A  	fcall	_Init_InOutPorts
   347                           
   348                           ;main.c: 39: Init_TMR2();
   349  00A0  120A  118A  20AD  120A  118A  	fcall	_Init_TMR2
   350                           
   351                           ;main.c: 40: Init_UART1();
   352  00A5  120A  118A  207A  120A  118A  	fcall	_Init_UART1
   353                           
   354                           ;main.c: 43: INTCONbits.GIE = 1;
   355  00AA  178B               	bsf	11,7	;volatile
   356                           
   357                           ;main.c: 44: INTCONbits.PEIE = 1;
   358  00AB  170B               	bsf	11,6	;volatile
   359  00AC                     l27:	
   360                           ;main.c: 46: while (1)
   361                           
   362                           
   363                           ;main.c: 47: {
   364  00AC  28AC               	goto	l27
   365  00AD                     __end_of_main:	
   366                           ;main.c: 49: }
   367                           ;main.c: 50: return 0;
   368                           ;	Return value of _main is never used
   369                           
   370                           
   371                           	psect	text1
   372  007A                     __ptext1:	
   373 ;; *************** function _Init_UART1 *****************
   374 ;; Defined at:
   375 ;;		line 72 in file "src/Init_func.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0
   392 ;;      Totals:         0       0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; Hardware stack levels required when called:    1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _Init_UART1
   405  007A                     _Init_UART1:	
   406                           
   407                           ;Init_func.c: 74: TXSTAbits.TXEN = 1;
   408                           
   409                           ;incstack = 0
   410                           ; Regs used in _Init_UART1: [wreg+status,2]
   411  007A  1683               	bsf	3,5	;RP0=1, select bank1
   412  007B  1303               	bcf	3,6	;RP1=0, select bank1
   413  007C  1698               	bsf	24,5	;volatile
   414                           
   415                           ;Init_func.c: 75: TXSTAbits.BRGH = 1;
   416  007D  1518               	bsf	24,2	;volatile
   417                           
   418                           ;Init_func.c: 77: RCSTAbits.SPEN = 1;
   419  007E  1283               	bcf	3,5	;RP0=0, select bank0
   420  007F  1303               	bcf	3,6	;RP1=0, select bank0
   421  0080  1798               	bsf	24,7	;volatile
   422                           
   423                           ;Init_func.c: 78: RCSTAbits.CREN = 1;
   424  0081  1618               	bsf	24,4	;volatile
   425                           
   426                           ;Init_func.c: 79: RCSTAbits.FERR = 1;
   427  0082  1518               	bsf	24,2	;volatile
   428                           
   429                           ;Init_func.c: 80: RCSTAbits.OERR = 1;
   430  0083  1498               	bsf	24,1	;volatile
   431                           
   432                           ;Init_func.c: 82: BAUDCTLbits.ABDOVF = 1;
   433  0084  1683               	bsf	3,5	;RP0=1, select bank3
   434  0085  1703               	bsf	3,6	;RP1=1, select bank3
   435  0086  1787               	bsf	7,7	;volatile
   436                           
   437                           ;Init_func.c: 83: BAUDCTLbits.SCKP = 1;
   438  0087  1607               	bsf	7,4	;volatile
   439                           
   440                           ;Init_func.c: 84: BAUDCTLbits.ABDEN = 1;
   441  0088  1407               	bsf	7,0	;volatile
   442                           
   443                           ;Init_func.c: 85: BAUDCTLbits.BRG16 = 1;
   444  0089  1587               	bsf	7,3	;volatile
   445                           
   446                           ;Init_func.c: 86: SPBRG = 25;
   447  008A  3019               	movlw	25
   448  008B  1683               	bsf	3,5	;RP0=1, select bank1
   449  008C  1303               	bcf	3,6	;RP1=0, select bank1
   450  008D  0099               	movwf	25	;volatile
   451                           
   452                           ;Init_func.c: 88: ANSELH = 0;
   453  008E  1683               	bsf	3,5	;RP0=1, select bank3
   454  008F  1703               	bsf	3,6	;RP1=1, select bank3
   455  0090  0189               	clrf	9	;volatile
   456                           
   457                           ;Init_func.c: 90: PORTCbits.RC7 = 1;
   458  0091  1283               	bcf	3,5	;RP0=0, select bank0
   459  0092  1303               	bcf	3,6	;RP1=0, select bank0
   460  0093  1787               	bsf	7,7	;volatile
   461                           
   462                           ;Init_func.c: 91: PORTCbits.RC6 = 0;
   463  0094  1307               	bcf	7,6	;volatile
   464  0095  0008               	return
   465  0096                     __end_of_Init_UART1:	
   466                           
   467                           	psect	text2
   468  00AD                     __ptext2:	
   469 ;; *************** function _Init_TMR2 *****************
   470 ;; Defined at:
   471 ;;		line 60 in file "src/Init_func.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _Init_TMR2
   501  00AD                     _Init_TMR2:	
   502                           
   503                           ;Init_func.c: 62: T2CONbits.TOUTPS = 0b1001;
   504                           
   505                           ;incstack = 0
   506                           ; Regs used in _Init_TMR2: [wreg+status,2+status,0]
   507  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   508  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   509  00AF  0812               	movf	18,w	;volatile
   510  00B0  3987               	andlw	-121
   511  00B1  3848               	iorlw	72
   512  00B2  0092               	movwf	18	;volatile
   513                           
   514                           ;Init_func.c: 63: T2CONbits.T2CKPS = 0b00;
   515  00B3  30FC               	movlw	-4
   516  00B4  0592               	andwf	18,f	;volatile
   517                           
   518                           ;Init_func.c: 64: T2CONbits.TMR2ON = 1;
   519  00B5  1512               	bsf	18,2	;volatile
   520                           
   521                           ;Init_func.c: 65: PIE1bits.TMR2IE = 1;
   522  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   523  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   524  00B8  148C               	bsf	12,1	;volatile
   525                           
   526                           ;Init_func.c: 66: PIR1bits.TMR2IF = 0;
   527  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   528  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   529  00BB  108C               	bcf	12,1	;volatile
   530                           
   531                           ;Init_func.c: 67: PR2 = 100;
   532  00BC  3064               	movlw	100
   533  00BD  1683               	bsf	3,5	;RP0=1, select bank1
   534  00BE  1303               	bcf	3,6	;RP1=0, select bank1
   535  00BF  0092               	movwf	18	;volatile
   536  00C0  0008               	return
   537  00C1                     __end_of_Init_TMR2:	
   538                           
   539                           	psect	text3
   540  00D1                     __ptext3:	
   541 ;; *************** function _Init_Oscillator *****************
   542 ;; Defined at:
   543 ;;		line 34 in file "src/Init_func.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   557 ;;      Params:         0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    1
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           
   572                           ;psect for function _Init_Oscillator
   573  00D1                     _Init_Oscillator:	
   574                           
   575                           ;Init_func.c: 36: OSCCON = 0b01100111;
   576                           
   577                           ;incstack = 0
   578                           ; Regs used in _Init_Oscillator: [wreg+status,2+status,0]
   579  00D1  3067               	movlw	103
   580  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   581  00D3  1303               	bcf	3,6	;RP1=0, select bank1
   582  00D4  008F               	movwf	15	;volatile
   583                           
   584                           ;Init_func.c: 37: OSCCONbits.IRCF = 0b110;
   585  00D5  080F               	movf	15,w	;volatile
   586  00D6  398F               	andlw	-113
   587  00D7  3860               	iorlw	96
   588  00D8  008F               	movwf	15	;volatile
   589                           
   590                           ;Init_func.c: 38: OSCCONbits.OSTS = 0;
   591  00D9  118F               	bcf	15,3	;volatile
   592                           
   593                           ;Init_func.c: 39: OSCCONbits.HTS = 1;
   594  00DA  150F               	bsf	15,2	;volatile
   595                           
   596                           ;Init_func.c: 40: OSCCONbits.LTS = 1;
   597  00DB  148F               	bsf	15,1	;volatile
   598                           
   599                           ;Init_func.c: 41: OSCCONbits.SCS = 1;
   600  00DC  140F               	bsf	15,0	;volatile
   601  00DD  0008               	return
   602  00DE                     __end_of_Init_Oscillator:	
   603                           
   604                           	psect	text4
   605  00C1                     __ptext4:	
   606 ;; *************** function _Init_InOutPorts *****************
   607 ;; Defined at:
   608 ;;		line 45 in file "src/Init_func.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		status,2
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _Init_InOutPorts
   638  00C1                     _Init_InOutPorts:	
   639                           
   640                           ;Init_func.c: 48: ANSELH = 0;
   641                           
   642                           ;incstack = 0
   643                           ; Regs used in _Init_InOutPorts: [status,2]
   644  00C1  1683               	bsf	3,5	;RP0=1, select bank3
   645  00C2  1703               	bsf	3,6	;RP1=1, select bank3
   646  00C3  0189               	clrf	9	;volatile
   647                           
   648                           ;Init_func.c: 51: TRISBbits.TRISB0 = 0;
   649  00C4  1683               	bsf	3,5	;RP0=1, select bank1
   650  00C5  1303               	bcf	3,6	;RP1=0, select bank1
   651  00C6  1006               	bcf	6,0	;volatile
   652                           
   653                           ;Init_func.c: 52: PORTBbits.RB0 = 1;
   654  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   655  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   656  00C9  1406               	bsf	6,0	;volatile
   657                           
   658                           ;Init_func.c: 55: TRISAbits.TRISA0 = 1;
   659  00CA  1683               	bsf	3,5	;RP0=1, select bank1
   660  00CB  1303               	bcf	3,6	;RP1=0, select bank1
   661  00CC  1405               	bsf	5,0	;volatile
   662                           
   663                           ;Init_func.c: 56: ANSELbits.ANS0 = 1;
   664  00CD  1683               	bsf	3,5	;RP0=1, select bank3
   665  00CE  1703               	bsf	3,6	;RP1=1, select bank3
   666  00CF  1408               	bsf	8,0	;volatile
   667  00D0  0008               	return
   668  00D1                     __end_of_Init_InOutPorts:	
   669                           
   670                           	psect	text5
   671  001D                     __ptext5:	
   672 ;; *************** function _ISR_my *****************
   673 ;; Defined at:
   674 ;;		line 54 in file "src/main.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  adcValueH       2    8[COMMON] unsigned int 
   679 ;;  adcValueL       2    6[COMMON] unsigned int 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         4       0       0       0       0
   691 ;;      Temps:          6       0       0       0       0
   692 ;;      Totals:        10       0       0       0       0
   693 ;;Total ram usage:       10 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		Interrupt level 1
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _ISR_my
   704  001D                     _ISR_my:	
   705                           
   706                           ;main.c: 57: if (PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
   707  001D  1683               	bsf	3,5	;RP0=1, select bank1
   708  001E  1303               	bcf	3,6	;RP1=0, select bank1
   709  001F  1C8C               	btfss	12,1	;volatile
   710  0020  282C               	goto	i1l603
   711  0021  1283               	bcf	3,5	;RP0=0, select bank0
   712  0022  1303               	bcf	3,6	;RP1=0, select bank0
   713  0023  1C8C               	btfss	12,1	;volatile
   714  0024  282C               	goto	i1l603
   715                           
   716                           ;main.c: 58: {
   717                           ;main.c: 59: PIR1bits.TMR2IF = 0;
   718  0025  108C               	bcf	12,1	;volatile
   719                           
   720                           ;main.c: 60: led0cont++;
   721  0026  3001               	movlw	1
   722  0027  07FC               	addwf	_led0cont,f
   723  0028  1803               	skipnc
   724  0029  0AFD               	incf	_led0cont+1,f
   725  002A  3000               	movlw	0
   726  002B  07FD               	addwf	_led0cont+1,f
   727  002C                     i1l603:	
   728                           
   729                           ;main.c: 61: }
   730                           ;main.c: 64: if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
   731  002C  1683               	bsf	3,5	;RP0=1, select bank1
   732  002D  1303               	bcf	3,6	;RP1=0, select bank1
   733  002E  1F0C               	btfss	12,6	;volatile
   734  002F  286E               	goto	i1l37
   735  0030  1283               	bcf	3,5	;RP0=0, select bank0
   736  0031  1303               	bcf	3,6	;RP1=0, select bank0
   737  0032  1F0C               	btfss	12,6	;volatile
   738  0033  286E               	goto	i1l37
   739                           
   740                           ;main.c: 65: {
   741                           ;main.c: 66: PIR1bits.ADIF = 0;
   742  0034  130C               	bcf	12,6	;volatile
   743                           
   744                           ;main.c: 67: uint16_t adcValueL = (uint16_t) ADRESL;
   745  0035  1683               	bsf	3,5	;RP0=1, select bank1
   746  0036  1303               	bcf	3,6	;RP1=0, select bank1
   747  0037  081E               	movf	30,w	;volatile
   748  0038  00F0               	movwf	??_ISR_my
   749  0039  01F1               	clrf	??_ISR_my+1
   750  003A  0870               	movf	??_ISR_my,w
   751  003B  00F6               	movwf	ISR_my@adcValueL
   752  003C  0871               	movf	??_ISR_my+1,w
   753  003D  00F7               	movwf	ISR_my@adcValueL+1
   754                           
   755                           ;main.c: 68: adcValueL = (adcValueL >> 6) & 0x0003;
   756  003E  0877               	movf	ISR_my@adcValueL+1,w
   757  003F  00F1               	movwf	??_ISR_my+1
   758  0040  0876               	movf	ISR_my@adcValueL,w
   759  0041  00F0               	movwf	??_ISR_my
   760  0042  3006               	movlw	6
   761  0043                     u5_25:	
   762  0043  1003               	clrc
   763  0044  0CF1               	rrf	??_ISR_my+1,f
   764  0045  0CF0               	rrf	??_ISR_my,f
   765  0046  3EFF               	addlw	-1
   766  0047  1D03               	skipz
   767  0048  2843               	goto	u5_25
   768  0049  3003               	movlw	3
   769  004A  0570               	andwf	??_ISR_my,w
   770  004B  00F6               	movwf	ISR_my@adcValueL
   771  004C  3000               	movlw	0
   772  004D  0571               	andwf	??_ISR_my+1,w
   773  004E  00F7               	movwf	ISR_my@adcValueL+1
   774                           
   775                           ;main.c: 70: uint16_t adcValueH = (uint16_t) ADRESH;
   776  004F  1283               	bcf	3,5	;RP0=0, select bank0
   777  0050  1303               	bcf	3,6	;RP1=0, select bank0
   778  0051  081E               	movf	30,w	;volatile
   779  0052  00F0               	movwf	??_ISR_my
   780  0053  01F1               	clrf	??_ISR_my+1
   781  0054  0870               	movf	??_ISR_my,w
   782  0055  00F8               	movwf	ISR_my@adcValueH
   783  0056  0871               	movf	??_ISR_my+1,w
   784  0057  00F9               	movwf	ISR_my@adcValueH+1
   785                           
   786                           ;main.c: 71: adcValueH = (adcValueH << 2) & 0x03FC;
   787  0058  0879               	movf	ISR_my@adcValueH+1,w
   788  0059  00F1               	movwf	??_ISR_my+1
   789  005A  0878               	movf	ISR_my@adcValueH,w
   790  005B  00F0               	movwf	??_ISR_my
   791  005C  1003               	clrc
   792  005D  0DF0               	rlf	??_ISR_my,f
   793  005E  0DF1               	rlf	??_ISR_my+1,f
   794  005F  1003               	clrc
   795  0060  0DF0               	rlf	??_ISR_my,f
   796  0061  0DF1               	rlf	??_ISR_my+1,f
   797  0062  30FC               	movlw	252
   798  0063  0570               	andwf	??_ISR_my,w
   799  0064  00F8               	movwf	ISR_my@adcValueH
   800  0065  3003               	movlw	3
   801  0066  0571               	andwf	??_ISR_my+1,w
   802  0067  00F9               	movwf	ISR_my@adcValueH+1
   803                           
   804                           ;main.c: 73: adcValue = adcValueL | adcValueH;
   805  0068  0878               	movf	ISR_my@adcValueH,w
   806  0069  0476               	iorwf	ISR_my@adcValueL,w
   807  006A  00FA               	movwf	_adcValue
   808  006B  0879               	movf	ISR_my@adcValueH+1,w
   809  006C  0477               	iorwf	ISR_my@adcValueL+1,w
   810  006D  00FB               	movwf	_adcValue+1
   811  006E                     i1l37:	
   812  006E  0875               	movf	??_ISR_my+5,w
   813  006F  1283               	bcf	3,5	;RP0=0, select bank0
   814  0070  00FF               	movwf	127
   815  0071  0874               	movf	??_ISR_my+4,w
   816  0072  008A               	movwf	10
   817  0073  0873               	movf	??_ISR_my+3,w
   818  0074  0084               	movwf	4
   819  0075  0E72               	swapf	(??_ISR_my+2)^(0+-128),w
   820  0076  0083               	movwf	3
   821  0077  0EFE               	swapf	126,f
   822  0078  0E7E               	swapf	126,w
   823  0079  0009               	retfie
   824  007A                     __end_of_ISR_my:	
   825  007E                     btemp	set	126	;btemp
   826  007E                     wtemp0	set	126
   827                           
   828                           	psect	intentry
   829  0004                     __pintentry:	
   830                           ;incstack = 0
   831                           ; Regs used in _ISR_my: [wreg+status,2+status,0]
   832                           
   833  0004                     interrupt_function:	
   834  007E                     saved_w	set	btemp
   835  0004  00FE               	movwf	btemp
   836  0005  0E03               	swapf	3,w
   837  0006  00F2               	movwf	??_ISR_my+2
   838  0007  0804               	movf	4,w
   839  0008  00F3               	movwf	??_ISR_my+3
   840  0009  080A               	movf	10,w
   841  000A  00F4               	movwf	??_ISR_my+4
   842  000B  1283               	bcf	3,5	;RP0=0, select bank0
   843  000C  1303               	bcf	3,6	;RP1=0, select bank0
   844  000D  087F               	movf	btemp+1,w
   845  000E  00F5               	movwf	??_ISR_my+5
   846  000F  120A  118A  281D   	ljmp	_ISR_my


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_my in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_my in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_my in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_my in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_my in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _Init_InOutPorts
                    _Init_Oscillator
                          _Init_TMR2
                         _Init_UART1
 ---------------------------------------------------------------------------------
 (1) _Init_UART1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Oscillator                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_InOutPorts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_my                                              10    10      0      60
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_InOutPorts
   _Init_Oscillator
   _Init_TMR2
   _Init_UART1

 _ISR_my (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 16 16:31:31 2018

             __CFG_CP$OFF 0000                        l27 00AC         ??_Init_InOutPorts 0000  
             __CFG_LVP$ON 0000                       _PR2 0092              __CFG_CPD$OFF 0000  
                     fsr0 0004              __CFG_IESO$ON 0000                      i1l37 006E  
                    u5_25 0043              __CFG_WRT$OFF 0000                      _main 0096  
                    btemp 007E                      start 0012             __CFG_MCLRE$ON 0000  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     i1l603 002C  
                   _SPBRG 0099            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A         ??_Init_Oscillator 0000                     status 0003  
                   wtemp0 007E                _Init_UART1 007A           __initialization 0015  
            __end_of_main 00AD                    ??_main 0000                    _ADRESH 001E  
                  _ADRESL 009E                    _ANSELH 0189                    _OSCCON 008F  
      __size_of_Init_TMR2 0014                    _ISR_my 001D            __CFG_PWRTE$OFF 0000  
                  saved_w 007E   __end_of__initialization 0019           _Init_InOutPorts 00C1  
             ?_Init_UART1 0070            __pcstackCOMMON 0070         __end_of_Init_TMR2 00C1  
                 ?_ISR_my 0070                __pmaintext 0096                __pintentry 0004  
         _Init_Oscillator 00D1       __size_of_Init_UART1 001C   __end_of_Init_InOutPorts 00D1  
         __size_of_ISR_my 005D                 _ANSELbits 0188                   __ptext1 007A  
                 __ptext2 00AD                   __ptext3 00D1                   __ptext4 00C1  
                 __ptext5 001D                 _T2CONbits 0012      end_of_initialization 0019  
               _RCSTAbits 0018   __end_of_Init_Oscillator 00DE                 _PORTBbits 0006  
               _PORTCbits 0007                 _TRISAbits 0085                 _TRISBbits 0086  
        ?_Init_InOutPorts 0070                 _TXSTAbits 0098            __end_of_ISR_my 007A  
            ??_Init_UART1 0000               _BAUDCTLbits 0187       start_initialization 0015  
               _Init_TMR2 00AD        __end_of_Init_UART1 0096                  ??_ISR_my 0070  
__CFG_FOSC$INTRC_NOCLKOUT 0000          ?_Init_Oscillator 0070               __pbssCOMMON 007A  
               ___latbits 0002                ?_Init_TMR2 0070             __pcstackBANK0 0000  
         ISR_my@adcValueH 0078           ISR_my@adcValueL 0076         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C               ??_Init_TMR2 0000  
                _adcValue 007A                  _led0cont 007C         __CFG_BOR4V$BOR21V 0000  
           __size_of_main 0017  __size_of_Init_InOutPorts 0010                _INTCONbits 000B  
                intlevel1 0000                _OSCCONbits 008F  __size_of_Init_Oscillator 000D  
