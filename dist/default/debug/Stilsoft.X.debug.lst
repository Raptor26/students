

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 16 15:31:12 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F886 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0007                     _PORTCbits	set	7
   129  0018                     _RCSTAbits	set	24
   130  001E                     _ADRESH	set	30
   131  0006                     _PORTBbits	set	6
   132  001F                     _ADCON0bits	set	31
   133  0019                     _TXREG	set	25
   134  000C                     _PIR1bits	set	12
   135  0012                     _T2CONbits	set	18
   136  000B                     _INTCONbits	set	11
   137  0099                     _SPBRG	set	153
   138  009F                     _ADCON1bits	set	159
   139  0085                     _TRISAbits	set	133
   140  0086                     _TRISBbits	set	134
   141  008F                     _OSCCONbits	set	143
   142  008F                     _OSCCON	set	143
   143  009E                     _ADRESL	set	158
   144  0098                     _TXSTAbits	set	152
   145  0092                     _PR2	set	146
   146  008C                     _PIE1bits	set	140
   147  0187                     _BAUDCTLbits	set	391
   148  0188                     _ANSELbits	set	392
   149  0189                     _ANSELH	set	393
   150                           
   151                           ; #config settings
   152  0000                     
   153                           	psect	cinit
   154  07F4                     start_initialization:	
   155  07F4                     __initialization:	
   156                           
   157                           ; Clear objects allocated to COMMON
   158  07F4  01FB               	clrf	__pbssCOMMON& (0+127)
   159  07F5  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   160                           
   161                           ; Clear objects allocated to BANK0
   162  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   163  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   164  07F8  01A0               	clrf	__pbssBANK0& (0+127)
   165  07F9  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   166  07FA  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   167  07FB  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   168  07FC                     end_of_initialization:	
   169                           ;End of C runtime variable initialization code
   170                           
   171  07FC                     __end_of__initialization:	
   172  07FC  0183               	clrf	3
   173  07FD  120A  118A  2F52   	ljmp	_main	;jump to C main() function
   174                           
   175                           	psect	bssCOMMON
   176  007B                     __pbssCOMMON:	
   177  007B                     _led0cont:	
   178  007B                     	ds	2
   179                           
   180                           	psect	bssBANK0
   181  0020                     __pbssBANK0:	
   182  0020                     _adcValue:	
   183  0020                     	ds	2
   184  0022                     _myVar:	
   185  0022                     	ds	2
   186                           
   187                           	psect	cstackCOMMON
   188  0071                     __pcstackCOMMON:	
   189  0071                     ?_Init_Oscillator:	
   190  0071                     ?_Init_InOutPorts:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  0071                     ?_Init_Adc:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0071                     ?_Init_UART1:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0071                     ?_main:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0071                     ?_ISR_my:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0071                     ??_ISR_my:	
   206                           ; 1 bytes @ 0x0
   207                           
   208                           
   209                           ; 1 bytes @ 0x0
   210  0071                     	ds	6
   211  0077                     ISR_my@adcValueL:	
   212                           
   213                           ; 2 bytes @ 0x6
   214  0077                     	ds	2
   215  0079                     ISR_my@adcValueH:	
   216                           
   217                           ; 2 bytes @ 0x8
   218  0079                     	ds	2
   219                           
   220                           	psect	cstackBANK0
   221  0000                     __pcstackBANK0:	
   222  0000                     ??_Init_Oscillator:	
   223  0000                     ??_Init_InOutPorts:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0000                     ??_Init_Adc:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0000                     ??_Init_UART1:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0000                     ??_main:	
   233                           ; 1 bytes @ 0x0
   234                           
   235                           
   236                           	psect	maintext
   237  0752                     __pmaintext:	
   238                           ; 1 bytes @ 0x0
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 42 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : B00/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   258 ;;      Params:         0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0
   260 ;;      Temps:          0       0       0       0       0
   261 ;;      Totals:         0       0       0       0       0
   262 ;;Total ram usage:        0 bytes
   263 ;; Hardware stack levels required when called:    2
   264 ;; This function calls:
   265 ;;		_Init_Adc
   266 ;;		_Init_InOutPorts
   267 ;;		_Init_Oscillator
   268 ;;		_Init_UART1
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           
   275                           ;psect for function _main
   276  0752                     _main:	
   277                           
   278                           ;main.c: 44: Init_Oscillator();
   279                           
   280                           ;incstack = 0
   281                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   282  0752  120A  118A  2702  120A  118A  	fcall	_Init_Oscillator
   283                           
   284                           ;main.c: 45: Init_InOutPorts();
   285  0757  120A  118A  270F  120A  118A  	fcall	_Init_InOutPorts
   286                           
   287                           ;main.c: 46: Init_Adc();
   288  075C  120A  118A  271F  120A  118A  	fcall	_Init_Adc
   289                           
   290                           ;main.c: 47: Init_UART1();
   291  0761  120A  118A  2736  120A  118A  	fcall	_Init_UART1
   292                           
   293                           ;main.c: 50: INTCONbits.GIE = 1;
   294  0766  178B               	bsf	11,7	;volatile
   295                           
   296                           ;main.c: 51: INTCONbits.PEIE = 1;
   297  0767  170B               	bsf	11,6	;volatile
   298                           
   299                           ;main.c: 53: T2CONbits.TOUTPS = 0b1001;
   300  0768  1283               	bcf	3,5	;RP0=0, select bank0
   301  0769  1303               	bcf	3,6	;RP1=0, select bank0
   302  076A  0812               	movf	18,w	;volatile
   303  076B  3987               	andlw	-121
   304  076C  3848               	iorlw	72
   305  076D  0092               	movwf	18	;volatile
   306                           
   307                           ;main.c: 54: T2CONbits.T2CKPS = 0b00;
   308  076E  30FC               	movlw	-4
   309  076F  0592               	andwf	18,f	;volatile
   310                           
   311                           ;main.c: 55: T2CONbits.TMR2ON = 1;
   312  0770  1512               	bsf	18,2	;volatile
   313                           
   314                           ;main.c: 56: PIE1bits.TMR2IE = 1;
   315  0771  1683               	bsf	3,5	;RP0=1, select bank1
   316  0772  1303               	bcf	3,6	;RP1=0, select bank1
   317  0773  148C               	bsf	12,1	;volatile
   318                           
   319                           ;main.c: 57: PIR1bits.TMR2IF = 0;
   320  0774  1283               	bcf	3,5	;RP0=0, select bank0
   321  0775  1303               	bcf	3,6	;RP1=0, select bank0
   322  0776  108C               	bcf	12,1	;volatile
   323                           
   324                           ;main.c: 58: PR2 = 100;
   325  0777  3064               	movlw	100
   326  0778  1683               	bsf	3,5	;RP0=1, select bank1
   327  0779  1303               	bcf	3,6	;RP1=0, select bank1
   328  077A  0092               	movwf	18	;volatile
   329  077B                     l732:	
   330                           ;main.c: 62: while (1) {
   331                           
   332                           
   333                           ;main.c: 64: if (TXSTAbits.TRMT == 1)
   334  077B  1683               	bsf	3,5	;RP0=1, select bank1
   335  077C  1303               	bcf	3,6	;RP1=0, select bank1
   336  077D  1C98               	btfss	24,1	;volatile
   337  077E  2F83               	goto	l64
   338                           
   339                           ;main.c: 65: {
   340                           ;main.c: 66: TXREG = 'H';
   341  077F  3048               	movlw	72
   342  0780  1283               	bcf	3,5	;RP0=0, select bank0
   343  0781  1303               	bcf	3,6	;RP1=0, select bank0
   344  0782  0099               	movwf	25	;volatile
   345  0783                     l64:	
   346                           
   347                           ;main.c: 67: }
   348                           ;main.c: 69: TXREG = 0xFF;
   349  0783  30FF               	movlw	255
   350  0784  1283               	bcf	3,5	;RP0=0, select bank0
   351  0785  0099               	movwf	25	;volatile
   352                           
   353                           ;main.c: 71: if (ADCON0bits.GO == 0)
   354  0786  1C9F               	btfss	31,1	;volatile
   355                           
   356                           ;main.c: 72: {
   357                           ;main.c: 73: ADCON0bits.GO = 1;
   358  0787  149F               	bsf	31,1	;volatile
   359                           
   360                           ;main.c: 74: }
   361                           ;main.c: 79: if (led0cont >= 1000) {
   362  0788  3003               	movlw	3
   363  0789  027C               	subwf	_led0cont+1,w
   364  078A  30E8               	movlw	232
   365  078B  1903               	skipnz
   366  078C  027B               	subwf	_led0cont,w
   367  078D  1C03               	skipc
   368  078E  2F7B               	goto	l732
   369                           
   370                           ;main.c: 80: led0cont = 0;
   371  078F  01FB               	clrf	_led0cont
   372  0790  01FC               	clrf	_led0cont+1
   373                           
   374                           ;main.c: 81: if (PORTBbits.RB0 == 0) {
   375  0791  1806               	btfsc	6,0	;volatile
   376  0792  2F95               	goto	l67
   377                           
   378                           ;main.c: 82: PORTBbits.RB0 = 1;
   379  0793  1406               	bsf	6,0	;volatile
   380                           
   381                           ;main.c: 83: } else {
   382  0794  2F7B               	goto	l732
   383  0795                     l67:	
   384                           
   385                           ;main.c: 84: PORTBbits.RB0 = 0;
   386  0795  1006               	bcf	6,0	;volatile
   387  0796  2F7B               	goto	l732
   388  0797                     __end_of_main:	
   389                           ;main.c: 85: }
   390                           ;main.c: 86: }
   391                           ;main.c: 87: }
   392                           ;main.c: 88: return;
   393                           
   394                           
   395                           	psect	text1
   396  0736                     __ptext1:	
   397 ;; *************** function _Init_UART1 *****************
   398 ;; Defined at:
   399 ;;		line 152 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels used:    1
   419 ;; Hardware stack levels required when called:    1
   420 ;; This function calls:
   421 ;;		Nothing
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           
   428                           ;psect for function _Init_UART1
   429  0736                     _Init_UART1:	
   430                           
   431                           ;main.c: 154: TXSTAbits.TXEN = 1;
   432                           
   433                           ;incstack = 0
   434                           ; Regs used in _Init_UART1: [wreg+status,2]
   435  0736  1683               	bsf	3,5	;RP0=1, select bank1
   436  0737  1303               	bcf	3,6	;RP1=0, select bank1
   437  0738  1698               	bsf	24,5	;volatile
   438                           
   439                           ;main.c: 155: TXSTAbits.BRGH = 1;
   440  0739  1518               	bsf	24,2	;volatile
   441                           
   442                           ;main.c: 157: RCSTAbits.SPEN = 1;
   443  073A  1283               	bcf	3,5	;RP0=0, select bank0
   444  073B  1303               	bcf	3,6	;RP1=0, select bank0
   445  073C  1798               	bsf	24,7	;volatile
   446                           
   447                           ;main.c: 158: RCSTAbits.CREN = 1;
   448  073D  1618               	bsf	24,4	;volatile
   449                           
   450                           ;main.c: 159: RCSTAbits.FERR = 1;
   451  073E  1518               	bsf	24,2	;volatile
   452                           
   453                           ;main.c: 160: RCSTAbits.OERR = 1;
   454  073F  1498               	bsf	24,1	;volatile
   455                           
   456                           ;main.c: 162: BAUDCTLbits.ABDOVF = 1;
   457  0740  1683               	bsf	3,5	;RP0=1, select bank3
   458  0741  1703               	bsf	3,6	;RP1=1, select bank3
   459  0742  1787               	bsf	7,7	;volatile
   460                           
   461                           ;main.c: 163: BAUDCTLbits.SCKP = 1;
   462  0743  1607               	bsf	7,4	;volatile
   463                           
   464                           ;main.c: 164: BAUDCTLbits.ABDEN = 1;
   465  0744  1407               	bsf	7,0	;volatile
   466                           
   467                           ;main.c: 165: BAUDCTLbits.BRG16 = 1;
   468  0745  1587               	bsf	7,3	;volatile
   469                           
   470                           ;main.c: 166: SPBRG = 25;
   471  0746  3019               	movlw	25
   472  0747  1683               	bsf	3,5	;RP0=1, select bank1
   473  0748  1303               	bcf	3,6	;RP1=0, select bank1
   474  0749  0099               	movwf	25	;volatile
   475                           
   476                           ;main.c: 168: ANSELH = 0;
   477  074A  1683               	bsf	3,5	;RP0=1, select bank3
   478  074B  1703               	bsf	3,6	;RP1=1, select bank3
   479  074C  0189               	clrf	9	;volatile
   480                           
   481                           ;main.c: 170: PORTCbits.RC7 = 1;
   482  074D  1283               	bcf	3,5	;RP0=0, select bank0
   483  074E  1303               	bcf	3,6	;RP1=0, select bank0
   484  074F  1787               	bsf	7,7	;volatile
   485                           
   486                           ;main.c: 171: PORTCbits.RC6 = 0;
   487  0750  1307               	bcf	7,6	;volatile
   488  0751  0008               	return
   489  0752                     __end_of_Init_UART1:	
   490                           
   491                           	psect	text2
   492  0702                     __ptext2:	
   493 ;; *************** function _Init_Oscillator *****************
   494 ;; Defined at:
   495 ;;		line 110 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0
   512 ;;      Totals:         0       0       0       0       0
   513 ;;Total ram usage:        0 bytes
   514 ;; Hardware stack levels used:    1
   515 ;; Hardware stack levels required when called:    1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _Init_Oscillator
   525  0702                     _Init_Oscillator:	
   526                           
   527                           ;main.c: 112: OSCCON = 0b01100111;
   528                           
   529                           ;incstack = 0
   530                           ; Regs used in _Init_Oscillator: [wreg+status,2+status,0]
   531  0702  3067               	movlw	103
   532  0703  1683               	bsf	3,5	;RP0=1, select bank1
   533  0704  1303               	bcf	3,6	;RP1=0, select bank1
   534  0705  008F               	movwf	15	;volatile
   535                           
   536                           ;main.c: 113: OSCCONbits.IRCF = 0b110;
   537  0706  080F               	movf	15,w	;volatile
   538  0707  398F               	andlw	-113
   539  0708  3860               	iorlw	96
   540  0709  008F               	movwf	15	;volatile
   541                           
   542                           ;main.c: 114: OSCCONbits.OSTS = 0;
   543  070A  118F               	bcf	15,3	;volatile
   544                           
   545                           ;main.c: 115: OSCCONbits.HTS = 1;
   546  070B  150F               	bsf	15,2	;volatile
   547                           
   548                           ;main.c: 116: OSCCONbits.LTS = 1;
   549  070C  148F               	bsf	15,1	;volatile
   550                           
   551                           ;main.c: 117: OSCCONbits.SCS = 1;
   552  070D  140F               	bsf	15,0	;volatile
   553  070E  0008               	return
   554  070F                     __end_of_Init_Oscillator:	
   555                           
   556                           	psect	text3
   557  070F                     __ptext3:	
   558 ;; *************** function _Init_InOutPorts *****************
   559 ;; Defined at:
   560 ;;		line 120 in file "main.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		status,2
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   574 ;;      Params:         0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; Hardware stack levels required when called:    1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           
   589                           ;psect for function _Init_InOutPorts
   590  070F                     _Init_InOutPorts:	
   591                           
   592                           ;main.c: 123: ANSELH = 0;
   593                           
   594                           ;incstack = 0
   595                           ; Regs used in _Init_InOutPorts: [status,2]
   596  070F  1683               	bsf	3,5	;RP0=1, select bank3
   597  0710  1703               	bsf	3,6	;RP1=1, select bank3
   598  0711  0189               	clrf	9	;volatile
   599                           
   600                           ;main.c: 126: TRISBbits.TRISB0 = 0;
   601  0712  1683               	bsf	3,5	;RP0=1, select bank1
   602  0713  1303               	bcf	3,6	;RP1=0, select bank1
   603  0714  1006               	bcf	6,0	;volatile
   604                           
   605                           ;main.c: 127: PORTBbits.RB0 = 1;
   606  0715  1283               	bcf	3,5	;RP0=0, select bank0
   607  0716  1303               	bcf	3,6	;RP1=0, select bank0
   608  0717  1406               	bsf	6,0	;volatile
   609                           
   610                           ;main.c: 130: TRISAbits.TRISA0 = 1;
   611  0718  1683               	bsf	3,5	;RP0=1, select bank1
   612  0719  1303               	bcf	3,6	;RP1=0, select bank1
   613  071A  1405               	bsf	5,0	;volatile
   614                           
   615                           ;main.c: 131: ANSELbits.ANS0 = 1;
   616  071B  1683               	bsf	3,5	;RP0=1, select bank3
   617  071C  1703               	bsf	3,6	;RP1=1, select bank3
   618  071D  1408               	bsf	8,0	;volatile
   619  071E  0008               	return
   620  071F                     __end_of_Init_InOutPorts:	
   621                           
   622                           	psect	text4
   623  071F                     __ptext4:	
   624 ;; *************** function _Init_Adc *****************
   625 ;; Defined at:
   626 ;;		line 135 in file "main.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0
   643 ;;      Totals:         0       0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _Init_Adc
   656  071F                     _Init_Adc:	
   657                           
   658                           ;main.c: 137: ADCON0bits.ADCS = 0b11;
   659                           
   660                           ;incstack = 0
   661                           ; Regs used in _Init_Adc: [wreg+status,2+status,0]
   662  071F  30C0               	movlw	192
   663  0720  1283               	bcf	3,5	;RP0=0, select bank0
   664  0721  1303               	bcf	3,6	;RP1=0, select bank0
   665  0722  049F               	iorwf	31,f	;volatile
   666                           
   667                           ;main.c: 138: ADCON0bits.CHS = 0b0000;
   668  0723  30C3               	movlw	-61
   669  0724  059F               	andwf	31,f	;volatile
   670                           
   671                           ;main.c: 139: ADCON1bits.ADFM = 0;
   672  0725  1683               	bsf	3,5	;RP0=1, select bank1
   673  0726  1303               	bcf	3,6	;RP1=0, select bank1
   674  0727  139F               	bcf	31,7	;volatile
   675                           
   676                           ;main.c: 140: ADCON1bits.VCFG1 = 0;
   677  0728  129F               	bcf	31,5	;volatile
   678                           
   679                           ;main.c: 141: ADCON1bits.VCFG0 = 0;
   680  0729  121F               	bcf	31,4	;volatile
   681                           
   682                           ;main.c: 142: ADCON0bits.ADON = 1;
   683  072A  1283               	bcf	3,5	;RP0=0, select bank0
   684  072B  1303               	bcf	3,6	;RP1=0, select bank0
   685  072C  141F               	bsf	31,0	;volatile
   686                           
   687                           ;main.c: 145: INTCONbits.GIE = 1;
   688  072D  178B               	bsf	11,7	;volatile
   689                           
   690                           ;main.c: 146: INTCONbits.PEIE = 1;
   691  072E  170B               	bsf	11,6	;volatile
   692                           
   693                           ;main.c: 147: PIE1bits.ADIE = 1;
   694  072F  1683               	bsf	3,5	;RP0=1, select bank1
   695  0730  1303               	bcf	3,6	;RP1=0, select bank1
   696  0731  170C               	bsf	12,6	;volatile
   697                           
   698                           ;main.c: 148: PIR1bits.ADIF = 0;
   699  0732  1283               	bcf	3,5	;RP0=0, select bank0
   700  0733  1303               	bcf	3,6	;RP1=0, select bank0
   701  0734  130C               	bcf	12,6	;volatile
   702  0735  0008               	return
   703  0736                     __end_of_Init_Adc:	
   704                           
   705                           	psect	text5
   706  0797                     __ptext5:	
   707 ;; *************** function _ISR_my *****************
   708 ;; Defined at:
   709 ;;		line 91 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  adcValueH       2    8[COMMON] unsigned int 
   714 ;;  adcValueL       2    6[COMMON] unsigned int 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   724 ;;      Params:         0       0       0       0       0
   725 ;;      Locals:         4       0       0       0       0
   726 ;;      Temps:          6       0       0       0       0
   727 ;;      Totals:        10       0       0       0       0
   728 ;;Total ram usage:       10 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		Interrupt level 1
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           
   738                           ;psect for function _ISR_my
   739  0797                     _ISR_my:	
   740                           
   741                           ;main.c: 92: if (PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
   742  0797  1683               	bsf	3,5	;RP0=1, select bank1
   743  0798  1303               	bcf	3,6	;RP1=0, select bank1
   744  0799  1C8C               	btfss	12,1	;volatile
   745  079A  2FA6               	goto	i1l756
   746  079B  1283               	bcf	3,5	;RP0=0, select bank0
   747  079C  1303               	bcf	3,6	;RP1=0, select bank0
   748  079D  1C8C               	btfss	12,1	;volatile
   749  079E  2FA6               	goto	i1l756
   750                           
   751                           ;main.c: 93: {
   752                           ;main.c: 94: PIR1bits.TMR2IF = 0;
   753  079F  108C               	bcf	12,1	;volatile
   754                           
   755                           ;main.c: 95: led0cont++;
   756  07A0  3001               	movlw	1
   757  07A1  07FB               	addwf	_led0cont,f
   758  07A2  1803               	skipnc
   759  07A3  0AFC               	incf	_led0cont+1,f
   760  07A4  3000               	movlw	0
   761  07A5  07FC               	addwf	_led0cont+1,f
   762  07A6                     i1l756:	
   763                           
   764                           ;main.c: 96: }
   765                           ;main.c: 97: if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
   766  07A6  1683               	bsf	3,5	;RP0=1, select bank1
   767  07A7  1303               	bcf	3,6	;RP1=0, select bank1
   768  07A8  1F0C               	btfss	12,6	;volatile
   769  07A9  2FE8               	goto	i1l78
   770  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   771  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   772  07AC  1F0C               	btfss	12,6	;volatile
   773  07AD  2FE8               	goto	i1l78
   774                           
   775                           ;main.c: 98: {
   776                           ;main.c: 99: PIR1bits.ADIF = 0;
   777  07AE  130C               	bcf	12,6	;volatile
   778                           
   779                           ;main.c: 100: uint16_t adcValueL =(uint16_t)ADRESL;
   780  07AF  1683               	bsf	3,5	;RP0=1, select bank1
   781  07B0  1303               	bcf	3,6	;RP1=0, select bank1
   782  07B1  081E               	movf	30,w	;volatile
   783  07B2  00F1               	movwf	??_ISR_my
   784  07B3  01F2               	clrf	??_ISR_my+1
   785  07B4  0871               	movf	??_ISR_my,w
   786  07B5  00F7               	movwf	ISR_my@adcValueL
   787  07B6  0872               	movf	??_ISR_my+1,w
   788  07B7  00F8               	movwf	ISR_my@adcValueL+1
   789                           
   790                           ;main.c: 101: adcValueL = (adcValueL >> 6) & 0x0003;
   791  07B8  0878               	movf	ISR_my@adcValueL+1,w
   792  07B9  00F2               	movwf	??_ISR_my+1
   793  07BA  0877               	movf	ISR_my@adcValueL,w
   794  07BB  00F1               	movwf	??_ISR_my
   795  07BC  3006               	movlw	6
   796  07BD                     u18_25:	
   797  07BD  1003               	clrc
   798  07BE  0CF2               	rrf	??_ISR_my+1,f
   799  07BF  0CF1               	rrf	??_ISR_my,f
   800  07C0  3EFF               	addlw	-1
   801  07C1  1D03               	skipz
   802  07C2  2FBD               	goto	u18_25
   803  07C3  3003               	movlw	3
   804  07C4  0571               	andwf	??_ISR_my,w
   805  07C5  00F7               	movwf	ISR_my@adcValueL
   806  07C6  3000               	movlw	0
   807  07C7  0572               	andwf	??_ISR_my+1,w
   808  07C8  00F8               	movwf	ISR_my@adcValueL+1
   809                           
   810                           ;main.c: 103: uint16_t adcValueH =(uint16_t)ADRESH;
   811  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   812  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   813  07CB  081E               	movf	30,w	;volatile
   814  07CC  00F1               	movwf	??_ISR_my
   815  07CD  01F2               	clrf	??_ISR_my+1
   816  07CE  0871               	movf	??_ISR_my,w
   817  07CF  00F9               	movwf	ISR_my@adcValueH
   818  07D0  0872               	movf	??_ISR_my+1,w
   819  07D1  00FA               	movwf	ISR_my@adcValueH+1
   820                           
   821                           ;main.c: 104: adcValueH = (adcValueH << 2) &0x03FC;
   822  07D2  087A               	movf	ISR_my@adcValueH+1,w
   823  07D3  00F2               	movwf	??_ISR_my+1
   824  07D4  0879               	movf	ISR_my@adcValueH,w
   825  07D5  00F1               	movwf	??_ISR_my
   826  07D6  1003               	clrc
   827  07D7  0DF1               	rlf	??_ISR_my,f
   828  07D8  0DF2               	rlf	??_ISR_my+1,f
   829  07D9  1003               	clrc
   830  07DA  0DF1               	rlf	??_ISR_my,f
   831  07DB  0DF2               	rlf	??_ISR_my+1,f
   832  07DC  30FC               	movlw	252
   833  07DD  0571               	andwf	??_ISR_my,w
   834  07DE  00F9               	movwf	ISR_my@adcValueH
   835  07DF  3003               	movlw	3
   836  07E0  0572               	andwf	??_ISR_my+1,w
   837  07E1  00FA               	movwf	ISR_my@adcValueH+1
   838                           
   839                           ;main.c: 106: adcValue = adcValueL | adcValueH;
   840  07E2  0879               	movf	ISR_my@adcValueH,w
   841  07E3  0477               	iorwf	ISR_my@adcValueL,w
   842  07E4  00A0               	movwf	_adcValue
   843  07E5  087A               	movf	ISR_my@adcValueH+1,w
   844  07E6  0478               	iorwf	ISR_my@adcValueL+1,w
   845  07E7  00A1               	movwf	_adcValue+1
   846  07E8                     i1l78:	
   847  07E8  0876               	movf	??_ISR_my+5,w
   848  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   849  07EA  00FF               	movwf	127
   850  07EB  0875               	movf	??_ISR_my+4,w
   851  07EC  008A               	movwf	10
   852  07ED  0874               	movf	??_ISR_my+3,w
   853  07EE  0084               	movwf	4
   854  07EF  0E73               	swapf	(??_ISR_my+2)^(0+-128),w
   855  07F0  0083               	movwf	3
   856  07F1  0EFE               	swapf	126,f
   857  07F2  0E7E               	swapf	126,w
   858  07F3  0009               	retfie
   859  07F4                     __end_of_ISR_my:	
   860  007E                     btemp	set	126	;btemp
   861  007E                     wtemp0	set	126
   862                           
   863                           	psect	intentry
   864  0004                     __pintentry:	
   865                           ;incstack = 0
   866                           ; Regs used in _ISR_my: [wreg+status,2+status,0]
   867                           
   868  0004                     interrupt_function:	
   869  007E                     saved_w	set	btemp
   870  0004  00FE               	movwf	btemp
   871  0005  0E03               	swapf	3,w
   872  0006  00F3               	movwf	??_ISR_my+2
   873  0007  0804               	movf	4,w
   874  0008  00F4               	movwf	??_ISR_my+3
   875  0009  080A               	movf	10,w
   876  000A  00F5               	movwf	??_ISR_my+4
   877  000B  1283               	bcf	3,5	;RP0=0, select bank0
   878  000C  1303               	bcf	3,6	;RP1=0, select bank0
   879  000D  087F               	movf	btemp+1,w
   880  000E  00F6               	movwf	??_ISR_my+5
   881  000F  120A  118A  2F97   	ljmp	_ISR_my


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     10      12
    BANK0            80      0       4
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_my in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_my in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_my in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_my in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_my in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _Init_Adc
                    _Init_InOutPorts
                    _Init_Oscillator
                         _Init_UART1
 ---------------------------------------------------------------------------------
 (1) _Init_UART1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Oscillator                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_InOutPorts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_my                                              10    10      0      92
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Adc
   _Init_InOutPorts
   _Init_Oscillator
   _Init_UART1

 _ISR_my (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      A       C       1       92.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 16 15:31:12 2018

             __CFG_CP$OFF 0000                        l64 0783                        l67 0795  
       ??_Init_InOutPorts 0000               __CFG_LVP$ON 0000                       l732 077B  
                     _PR2 0092              __CFG_CPD$OFF 0000                       fsr0 0004  
            __CFG_IESO$ON 0000                      i1l78 07E8              __CFG_WRT$OFF 0000  
                    _main 0752                      btemp 007E                      start 0012  
           __CFG_MCLRE$ON 0000                     ?_main 0071             __CFG_WDTE$OFF 0000  
                   i1l756 07A6                     _SPBRG 0099                     u18_25 07BD  
                   _TXREG 0019            __CFG_FCMEN$OFF 0000                     _myVar 0022  
          __CFG_BOREN$OFF 0000                     pclath 000A         ??_Init_Oscillator 0000  
                   status 0003                     wtemp0 007E                _Init_UART1 0736  
         __initialization 07F4              __end_of_main 0797          __end_of_Init_Adc 0736  
                  ??_main 0000                    _ADRESH 001E                    _ADRESL 009E  
                  _ANSELH 0189                    _OSCCON 008F                    _ISR_my 0797  
          __CFG_PWRTE$OFF 0000                    saved_w 007E   __end_of__initialization 07FC  
         _Init_InOutPorts 070F               ?_Init_UART1 0071            __pcstackCOMMON 0071  
              __pbssBANK0 0020                 ?_Init_Adc 0071                   ?_ISR_my 0071  
              __pmaintext 0752                __pintentry 0004           _Init_Oscillator 0702  
     __size_of_Init_UART1 001C   __end_of_Init_InOutPorts 071F                ??_Init_Adc 0000  
         __size_of_ISR_my 005D                 _ANSELbits 0188                   __ptext1 0736  
                 __ptext2 0702                   __ptext3 070F                   __ptext4 071F  
                 __ptext5 0797                 _T2CONbits 0012      end_of_initialization 07FC  
               _RCSTAbits 0018   __end_of_Init_Oscillator 070F                 _PORTBbits 0006  
               _PORTCbits 0007                 _TRISAbits 0085                 _TRISBbits 0086  
        ?_Init_InOutPorts 0071                 _TXSTAbits 0098            __end_of_ISR_my 07F4  
            ??_Init_UART1 0000               _BAUDCTLbits 0187       start_initialization 07F4  
      __end_of_Init_UART1 0752                  ??_ISR_my 0071         __size_of_Init_Adc 0017  
__CFG_FOSC$INTRC_NOCLKOUT 0000          ?_Init_Oscillator 0071               __pbssCOMMON 007B  
               ___latbits 0002             __pcstackBANK0 0000           ISR_my@adcValueH 0079  
         ISR_my@adcValueL 0077         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
                _Init_Adc 071F                  _adcValue 0020                  _led0cont 007B  
       __CFG_BOR4V$BOR21V 0000             __size_of_main 0045  __size_of_Init_InOutPorts 0010  
              _INTCONbits 000B                  intlevel1 0000                _OSCCONbits 008F  
__size_of_Init_Oscillator 000D  
